#/bin/bash

# init

if type -t _completion_loader | grep -q '^function$' ; then
  _completion_loader docker
fi;

if type -t _docker | grep -q '^function$' ; then
  shopt -s progcomp
  complete -F _docker docker_i
fi;

complete -C aws_completer aws

if [ -f /opt/scripts/common_tools/set-env ] ;
  then NO_SHELL=1 source /opt/scripts/common_tools/set-env
fi;

# functions

f() {
  find -name "$@"
}
export -f f

bootstrap() {
  cd $REPO_PATH/bootstrap
}
export -f bootstrap

sreplace() {
  perl -pi -e "s/$1/$2/g" `egrep -Irsl $1 *`
}
export -f sreplace

gack() {
     ack    --ignore-dir=vendor --ignore-dir=log \
            --ignore-dir=share --ignore-dir=spec \
            --ignore-dir=target --ignore-dir=test-output \
            --ignore-dir=test --ignore-dir=classes \
            --ignore-dir=logs \
            --ignore-file=is:.cache-main --ignore-file=is:.cache-tests \
            --ignore-file=is:.cache --ignore-file=is:.project \
            --ignore-file=is:dump.txt --ignore-dir=build \
          "$@"
}
export -f gack

fixws() {
  sed -i 's/[[:space:]]*$//' $@
}
export -f fixws

fixwsgit() {
  if [ -n "$2" ] ; then
    EXTS=$2
  else
    EXTS='scala|java|sh|c|cpp|h|hpp|sbt'
  fi;

  for GITFILE in $(git show --name-only --format=oneline $1 | tail -n+2 | egrep ".*\.($EXTS)") ; do
    if [ -e "$GITFILE" ] ; then fixws $GITFILE; fi;
  done;
}
export -f fixwsgit

path_regex() {
  echo "$@" | sed 's/\//\\\//g'
}
export -f path_regex

chmox() {
  chmod +x "$@"
}
export -f chmox

chome() {
  HOME_DIR=`pwd | grep -o '\/home/[^\/]*'`
  if [ -z "$HOME_DIR" ] ; then echo "error: could not find user"; return; fi;

  USER_STAT=`stat -c "%U:%G" $HOME_DIR`
  chown $USER_STAT "$@"
}
export -f chome

SCREEN_EXCHANGE=/tmp/screen-exchange
screenex_i() {
  cat > $SCREEN_EXCHANGE
}
screenex_o() {
  cat $SCREEN_EXCHANGE
}

function compare_files() {
  UNIQUE_LINES=`md5sum $@ | awk '{ print $1 }' | uniq | wc -l`
  if [ "$UNIQUE_LINES" = "1" ] ; then echo "same"; else echo "diff"; fi;
}
export -f compare_files

function create_script() {
  if [ -e "$1" ] ; then echo "already exists"; return; fi;

  echo "#!/bin/bash" > $1
  chmox $1
  echo "done!"
}
export -f create_script

if [ -z "$DOCKER_IMAGE_NAME" ] ; then
  git() {
    if [ "`whoami`" = "root" ] ; then echo "error: stop using git as root"; return; fi;
    /usr/bin/git "$@"
  }
  export -f git
fi;

unalias vi 2> /dev/null
vi() {
  /usr/bin/env vim "$@"
}
export -f vi

calc() {
  awk "BEGIN { print $* }"  
}
export -f calc

# aliases

alias vu=vi
alias scala='scala -Dscala.color'

